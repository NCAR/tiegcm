#!/bin/tcsh

# PBS specifications
#PBS -N {{simulation.job_name}}
{%- if pbs.project_code|default('', true) %}
#PBS -A {{pbs.project_code}}{%- endif %}
#PBS -q {{pbs.queue}}
#PBS -j oe
{%- if pbs.job_priority|default('', true) %}
#PBS -l job_priority={{pbs.job_priority}}{%- endif %}
#PBS -l {% for key, value in pbs.resource.items() if key != 'model' %}{{ key }}={{ value }}{% if not loop.last %}:{% endif %}{% endfor %}{% if 'model' in pbs.resource %}:model={{ pbs.resource['model'] }}{% endif %},walltime={{pbs.walltime}}

# Set enviroment variables
setenv TGCMDATA {{model.data.tgcmdata}}
{%- for data in pbs.other_job %}
{%- if data != None %}
{{data}}
{%- endif %}
{%- endfor %}

# Load modules
module purge
{%- if pbs.module_list is not none %}
module restore {{pbs.module_list}}{%- endif %}
{%- for module in pbs.modules %}
module load {{ module }}
{%- endfor %}

# Execute tiegcm
cd {{model.data.execdir}}
{{pbs.mpi_command}} -np {{pbs.nprocs}} {{model.data.modelexe}} {{model.data.input_file}} >&! {{model.data.log_file}}


cd {{model.data.workdir}}

# Make tar file of task log files:
tar -cf {{model.data.log_file}}.tar *task*.out
echo "Saved stdout tar file {{model.data.log_file}}.tar"
rm *task*.out
