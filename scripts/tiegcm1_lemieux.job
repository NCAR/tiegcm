#!/bin/csh
#
# Batch script for tiegcm1 job on Pittsburgh PSC lemieux (Compaq OSF1)
# Assumes existence of tiegcm1_src.tar in $SRCDIR
#
#PBS -l walltime=1:00:00
#PBS -l rmsnodes=8:32
#PBS -j oe
#PBS -m abe
#PBS -M foster@ucar.edu
#
#set echo
set JOB    = tiegcm1           # generic job name (can be used in paths)
set EXEC   = tiegcm1           # name of executable from Makefile
set SRCDIR = ~/$JOB            # location of source code, Makefile, etc.
set EXECDIR = $SCRATCH/$JOB.$$ # dir for build and exec (this script will exec here)
#set EXECDIR = $SCRATCH/$JOB.ready
#set EXECDIR = $LOCAL/$JOB.$$   # dir for build and exec (this script will exec here)
set SOURCE = $SCRATCH/$JOB/ROBLE.tgcm15r.peqsm41.nc  # path to start-up history file
set MAGVOL = $SCRATCH/$JOB/TGCM.data.magfield.nc     # path to mag field data file
set READY = 0                  # set 1 if EXEC already prepared in EXECDIR 
#
if (! -d $EXECDIR) then
  mkdir -p $EXECDIR
  echo "Made execdir $EXECDIR"
endif
cd $EXECDIR
echo Begin job $JOB from execdir $EXECDIR at `date`
#
# Copy source tar file from SRCDIR and extract:
#
if ($READY != 1) then
  cp $SRCDIR/${JOB}_src.tar . || \
    echo ">>> WARNING: error from cp of $SRCDIR/${JOB}_src.tar"
  tar xf ${JOB}_src.tar || \
    echo ">>> WARNING: error from tar xf ${JOB}_src.tar"
endif
#
# Load netcdf module:
#
eval `/usr/local/Modules/$MODULE_VERSION/bin/modulecmd csh load netcdf`
#
# Make dependencies and compile:
#
if ($READY != 1) then
  perl mkdep || echo ">>> WARNING: error from mkdep"
  set err = 0
  gmake $EXEC || set err = 1
  if ($err == 0) then
    echo "Successful gmake."
  else
    echo "Error from gmake."
    exit $err
  endif
endif
#
# Get user input file:
#
set input = $JOB.inp
cat << 'EOFINP' >! $input
INCLUDE lemieux.inp
'EOFINP'
#
# Copy needed data files to $EXECDIR (Use PSC's special copy command tcscp).
#
 cp $SOURCE $MAGVOL $EXECDIR || \
   echo ">>> WARNING: error copying $SOURCE to $EXECDIR"
#
#tcscp $input $SOURCE $MAGVOL '{compute}:${EXECDIR}'
#
# prun command options: 
#   -N nodes -n procs env vars are set from rmsnodes PBS directive above.
#   -v Enable verbose mode.
#   -s Print job statistics as the job exits.
#   -t Preface each output line with process number that produced it, OR
#   -o file.% will expand stdout to file.0, file.1,...file.n-1 for each task
#
echo "Executing prun.."
prun -N ${RMS_NODES} -n ${RMS_PROCS} -v -s -o ./$JOB.% ./$EXEC < ./$JOB.inp
#
echo Completed JOB $JOB at `date`
exit
