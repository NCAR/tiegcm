#! /bin/csh
#
# This is an example job script to configure, build, and execute a tgcm
#   model on a Linux system.
#
# To use:
#   1) Set script variables below.
#   2) Copy to a large working directory on the target machine.
#   3) Assuming this script is called "jobfile", then:
#      To run interactively (in background), use "jobfile >&! jobfile.out &"
#
# See http://download.hao.ucar.edu/pub/tgcm/doc/userguide for more information.
# If you need to customize the configuration beyond the shell vars here, 
#   add or change options to the tgcm_config call below. 
#
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#    USER EDIT BATCH JOB (LSF) RESOURCES (for Linux lightning cluster)
#
#BSUB -J timegcm        # job name
#BSUB -a mpich_gm       # select the MPICH_GM esub
#BSUB -x 		# exclusive use of the node
#BSUB -n 4              # number of MPI tasks
#BSUB -q premium        # queue (premium and regular are available)
##BSUB -q debug         # debug queue is available during the day (3 hr limit)
#BSUB -o timegcm.%J.out # stdout filename
#BSUB -e timegcm.%J.out # stderr filename
#BSUB -N                # send mail when job finishes
#BSUB -u $LOGNAME@ucar.edu # email address
#BSUB -W 1:00           # wallclock limit (hh:mm)
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#        USER EDIT SHELL VARIABLES (for batch and interactive jobs)
#
# model:       Desired model name (Required. Use ListModels to see valid models)
# wrkdir:      User's working directory (default is `pwd`, i.e., the cwd)
# usr_srcdirs: List of user source directories (optional)
# input:       Namelist input file (if not given, a default will be created)
# tgcmroot:    Root directory of distribution (default env var $TGCMROOT)
# tgcmdata:    Root directory containing input data files (default $TGCMDATA)
# execdir:     Directory in which to build and execute 
#              (default is $wrkdir/$model-$os)
# utildir:     Directory containing config script and needed utilities
#              (default is $tgcmroot/$model/scripts)
# hres:        Horizontal resolution can be either 5.0 (default), or 2.5 degrees
# vres:        Vertical resolution can be either 0.5 (default), or 0.25 (ln(p0/p))
#
# Model stdout will be written to $wrkdir.
# Model output history files will be written to $execdir.
#
 set model       = timegcm
 set wrkdir      = .
#set wrkdir      = $model-$$
#set input       = timegcm.inp
#set usr_srcdirs = modsrc
#set tgcmroot    = /fis/hao/tgcm
#set tgcmdata    = /hao/tgcm/data
#set execdir     = ./timegcm-linux-mpi
#set utildir     = /fis/hao/tgcm/scripts
#set hres = 5.0
#set vres = 0.5
#
#             USER SHOULD NOT HAVE TO EDIT BELOW THIS LINE
#             (except maybe to customize tgcm_config below)
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
set mycwd = `pwd`
echo " "
echo "${0}:"
echo "  Begin execution at `date`"
echo "  Current working directory: $mycwd"
echo "  System: `uname -a`"  
echo "  Log name: $LOGNAME"
set userguide = http://download.hao.ucar.edu/pub/tgcm/doc/userguide
#
# Model name is required:
#
if (! $?model) then
  echo "" ; echo ">>> Please set desired model (e.g., 'tiegcm' or 'timegcm')"
  echo "    See $userguide for more information."
  exit 1
endif
echo "  Model: $model"
#
if (! $?wrkdir) set wrkdir = `pwd`     # default working dir is cwd
if (! $?tgcmroot) set tgcmroot = ""
if (! $?tgcmdata) set tgcmdata = ""
if (! $?usr_srcdirs) set usr_srcdirs = ""
if (! $?hres) set hres = 5.0
if (! $?vres) set vres = 0.5
#
# Set utility dir from shell var $tgcmroot, or env var $TGCMROOT:
# (must contain Abspath, MakeNamelist, MkLogs, etc) 
#
if (! $?utildir) then
  if ($tgcmroot != "") then    # shell var from above (if set, trumps env var)
    set utildir = $tgcmroot/$model/scripts
  else if ($?TGCMROOT) then    # env var
    set utildir = $TGCMROOT/$model/scripts
  else
    echo "" ; echo ">>> WARNING: cannot determine utility directory."
    echo "" ; echo "Please set either shell var tgcmroot, or env var TGCMROOT"
    echo "  such that the directory tgcmroot/$model/scripts contains"
    echo "  the configuration script tgcm_config, and other needed utilities."
    echo "  See $userguide for more information."
    echo "" ; exit 1
  endif
else     # user provided utildir -- it must exist
  if (! -d $utildir) then
    echo ">>> Cannot find utility directory $utildir" && exit 1
  endif
endif
if (! -x $utildir/Abspath) echo ">>> Cannot find command $utildir/Abspath"
set utildir = `perl $utildir/Abspath $utildir` # full path to utildir
echo "  Utildir = $utildir"
#
set wrkdir = `perl $utildir/Abspath $wrkdir`  # full path to wrkdir
echo "  Wrkdir = $wrkdir"
#
# Set exec directory if necessary (wrkdir/model-os):
#
if (! $?execdir) then
  set os = `uname -s | tr "[A-Z]" "[a-z]"`
  if ($os == 'linux') then
    set nodename = `uname -n`
    if ($nodename =~ ln*) then # is SCD linux cluster "lightning"
      set os = ${os}-mpi 
    endif
  endif
  set execdir = $wrkdir/$model-$os # if does not exist, will be created by config
endif
set execdir = `perl $utildir/Abspath $execdir`  # full path to execdir
echo "  Execdir = $execdir"
if (! -x $utildir/tgcm_config) \
  echo ">>> WARNING: Cannot find config script $utildir/tgcm_config"
#
# Configure (pass shell vars to tgcm_config):
# See http://download.hao.ucar.edu/pub/tgcm/doc/userguide for more
#   options to tgcm_config.
#
perl $utildir/tgcm_config -model=$model -wrkdir=$wrkdir -execdir=$execdir \
  -tgcmroot=$tgcmroot -tgcmdata=$tgcmdata -usr_srcdirs=$usr_srcdirs \
  -utildir=$utildir -hres=$hres -vres=$vres || \
  echo ">>> ${0}: Error from tgcm_config" && exit 1
#
# Make default namelist input if not provided by user:
#
if (! $?input) then
  set input = \
    `perl $utildir/MkNamelist -model=$model -hres=$hres -vres=$vres` || \
     echo "${0}: Error from MkNamelist: fileout = $input" && exit 1
  echo "Made default namelist input file $input" 
else
  echo "Using user provided namelist input file $input"
endif
set namelist = `perl $utildir/Abspath $input`
if (! -e $namelist) then
  echo "${0}: Cannot find namelist input file $namelist" && exit 1
else
  echo "${0}: Using namelist file $namelist\n";
endif
#
# Build model in execdir:
#
cd $execdir || echo ">>> Cannot cd to execdir $execdir" && exit 1
echo "" ; echo "Begin building $model in `pwd` at `date`..."
gmake -j4 || echo ">>> Error return from gmake" && exit 1
echo "End building $model at `date`..."
#
# Execute (still in execdir):
# 
set output = $wrkdir/$model.out  # model stdout to user's wrkdir (full path)
if (-e dispose.csh) rm -f dispose.csh || \
  echo "WARNING: error removing file dispose.csh prior to execution."
#
# Must make a separate exec script for the linux cluster "lightning",
# so that mpirun.lsf will send stdout to separate files for each mpi task:
#
cat << EOF > mpiexec.$$
#! /bin/csh
  set stdin = $namelist
  set stdout = $wrkdir/${model}_task\$GMPI_ID.out
  set exec = $execdir/$model
  \$exec < \$stdin > \$stdout
EOF
chmod +x mpiexec.$$
#
echo "" ; echo "Executing model $model from `pwd` at `date`"
echo "Model output will go to $wrkdir/${model}_task[n].out"
mpirun.lsf mpiexec.$$ || \
  echo ">>> ${0} Execution of $execdir/$model FAILED at `date`" && \
  echo "See output in $output"
echo "Run of $model completed at `date`"
#
# Prepare and submit mss dispose job (MkDispose will make and submit 
# dispose.job only if dispose.csh exists in execdir, i.e., model was 
# run with DISPOSE=2):
#
perl $utildir/MkDispose -submit
#
cd $mycwd # return to original cwd
echo "" ; echo "Completed execution at `date`"
exit 0 
